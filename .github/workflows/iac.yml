name: IaC - Terraform Azure

on:
  push:
    branches: [ main, dev, qa, feature/** ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Variables de entorno comunes a todos los jobs
env:
  TF_IN_AUTOMATION: true
  # Credenciales del Service Principal (ponlas como GitHub Secrets)
  ARM_TENANT_ID:     ${{ secrets.AZURE_TENANT_ID }}
  ARM_CLIENT_ID:     ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  # Access key del Storage Account donde se guarda el tfstate remoto
  ARM_ACCESS_KEY:    ${{ secrets.ARM_ACCESS_KEY }}

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ✅ Plan B: iniciamos sesión SIN subscriptionId
      - name: Azure Login (no subscription)
        uses: azure/login@v2
        with:
          allow-no-subscriptions: true
          creds: >
            {"clientId":"${{ secrets.AZURE_CLIENT_ID }}",
             "clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}",
             "tenantId":"${{ secrets.AZURE_TENANT_ID }}"}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init (tfstate por rama)
        run: |
          terraform init \
            -backend-config="resource_group_name=terraform" \
            -backend-config="storage_account_name=xpeterraformpoc" \
            -backend-config="container_name=terraform-tfstate" \
            -backend-config="key=${{ github.ref_name }}.tfstate"

      - name: Terraform Fmt
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Publicar plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  apply:
    name: Terraform Apply (requires approval)
    needs: plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    # Protege con aprobación previa en Settings → Environments → prod
    environment: prd

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ✅ Plan B también aquí
      - name: Azure Login (no subscription)
        uses: azure/login@v2
        with:
          allow-no-subscriptions: true
          creds: >
            {"clientId":"${{ secrets.AZURE_CLIENT_ID }}",
             "clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}",
             "tenantId":"${{ secrets.AZURE_TENANT_ID }}"}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init (tfstate por rama)
        run: |
          terraform init \
            -backend-config="resource_group_name=terraform" \
            -backend-config="storage_account_name=xpeterraformpoc" \
            -backend-config="container_name=terraform-tfstate" \
            -backend-config="key=${{ github.ref_name }}.tfstate"

      - name: Terraform Plan (apply)
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
